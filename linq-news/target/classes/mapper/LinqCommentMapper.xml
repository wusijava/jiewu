<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linq.news.mapper.LinqCommentMapper">
    <resultMap id="BaseResultMap" type="com.linq.news.domain.LinqComment">
        <!--@mbg.generated-->
        <!--@Table linq_comment-->
        <id column="comment_id" jdbcType="BIGINT" property="commentId"/>
        <result column="news_id" jdbcType="BIGINT" property="newsId"/>
        <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent"/>
        <result column="thumbs" jdbcType="BIGINT" property="thumbs"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="DATE" property="updateTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <association property="news" resultMap="newsResult" column="news_id" javaType="com.linq.news.domain.LinqNews"/>
    </resultMap>

    <!--新闻结果集合-->
    <resultMap id="newsResult" type="com.linq.news.domain.LinqNews">
        <id column="news_id" jdbcType="BIGINT" property="newsId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="news_type_id" jdbcType="BIGINT" property="newsTypeId"/>
        <result column="news_title" jdbcType="LONGVARCHAR" property="newsTitle"/>
        <result column="news_content" jdbcType="LONGVARCHAR" property="newsContent"/>
        <result column="news_attr" jdbcType="CHAR" property="newsAttr"/>
        <result column="news_image" jdbcType="VARCHAR" property="newsImage"/>
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="is_public" jdbcType="CHAR" property="isPublic"/>
        <result column="thumbs" jdbcType="BIGINT" property="thumbs"/>
        <result column="visits" jdbcType="BIGINT" property="visits"/>
        <result column="comments" jdbcType="BIGINT" property="comments"/>
        <result column="collects" jdbcType="BIGINT" property="collects"/>
        <result column="news_source" jdbcType="VARCHAR" property="newsSource"/>
        <result column="news_source_author" jdbcType="VARCHAR" property="newsSourceAuthor"/>
        <result column="news_source_tags" jdbcType="VARCHAR" property="newsSourceTags"/>
        <result column="status" jdbcType="CHAR" property="status"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        comment_id, news_id, comment_content, thumbs, del_flag, create_by, create_time, update_by,
        update_time, remark
    </sql>
    <sql id="findCommentVo">
        select c.comment_id,
               c.news_id,
               c.comment_content,
               c.thumbs,
               c.del_flag,
               c.create_by,
               c.create_time,
               c.update_by,
               c.update_time,
               c.remark,
               n.user_id,
               n.news_type_id,
               n.news_title,
               n.news_content,
               n.news_attr,
               n.news_image,
               n.order_num,
               n.is_public,
               n.thumbs,
               n.visits,
               n.comments,
               n.collects,
               n.news_source,
               n.news_source_author,
               n.`status`,
               n.del_flag,
               n.create_by,
               n.create_time,
               n.update_by,
               n.update_time,
               n.remark
        from linq_comment c
                     left join linq_news n on c.news_id = n.news_id
    </sql>
    <!--
        /**
         * 条件分页查询新闻评论列表
         *
         * @param comment 新闻评论
         *
         * @return 新闻评论集合
         */
        IPage<LinqComment> findPage(Page<LinqComment> linqCommentPage, @Param("comment") LinqComment comment);
    -->
    <select id="findPage" resultMap="BaseResultMap">
        <include refid="findCommentVo"/>
        where c.del_flag = '0'
        <if test="comment.newsId != null">
            and c.news_id = #{comment.newsId}
        </if>
        <if test="comment.beginTime != null and comment.beginTime != ''">
            <!-- 开始时间检索 -->
            AND date_format(c.create_time, '%y%m%d') &gt;= date_format(#{comment.beginTime}, '%y%m%d')
        </if>
        <if test="comment.endTime != null and comment.endTime != ''">
            <!-- 结束时间检索 -->
            AND date_format(c.create_time, '%y%m%d') &lt;= date_format(#{comment.endTime}, '%y%m%d')
        </if>
        order by c.comment_id desc
    </select>
</mapper>