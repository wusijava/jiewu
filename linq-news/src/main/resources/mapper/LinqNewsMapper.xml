<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linq.news.mapper.LinqNewsMapper">
    <resultMap id="BaseResultMap" type="com.linq.news.domain.LinqNews">
        <!--@mbg.generated-->
        <!--@Table linq_news-->
        <id column="news_id" jdbcType="BIGINT" property="newsId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="news_type_id" jdbcType="BIGINT" property="newsTypeId"/>
        <result column="news_title" jdbcType="LONGVARCHAR" property="newsTitle"/>
        <result column="news_content" jdbcType="LONGVARCHAR" property="newsContent"/>
        <result column="news_attr" jdbcType="CHAR" property="newsAttr"/>
        <result column="news_image" jdbcType="VARCHAR" property="newsImage"/>
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="is_public" jdbcType="CHAR" property="isPublic"/>
        <result column="is_recommend" jdbcType="CHAR" property="isRecommend"/>
        <result column="is_draft" jdbcType="CHAR" property="isDraft"/>
        <result column="thumbs" jdbcType="BIGINT" property="thumbs"/>
        <result column="visits" jdbcType="BIGINT" property="visits"/>
        <result column="comments" jdbcType="BIGINT" property="comments"/>
        <result column="collects" jdbcType="BIGINT" property="collects"/>
        <result column="news_source" jdbcType="VARCHAR" property="newsSource"/>
        <result column="news_source_author" jdbcType="VARCHAR" property="newsSourceAuthor"/>
        <result column="news_source_tags" jdbcType="VARCHAR" property="newsSourceTags"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <association property="newsType" javaType="com.linq.news.domain.LinqNewsType" column="news_type_id"
                     resultMap="newTypeResult"/>
        <association property="sysUser" javaType="com.linq.common.core.domain.entity.SysUser" column="user_id"
                     resultMap="sysUserResult"/>
    </resultMap>

    <!--新闻类型结果集合-->
    <resultMap id="newTypeResult" type="com.linq.news.domain.LinqNewsType">
        <id column="news_type_id" jdbcType="BIGINT" property="newsTypeId"/>
        <result column="news_type_name" jdbcType="VARCHAR" property="newsTypeName"/>
        <result column="status" jdbcType="CHAR" property="status"/>
    </resultMap>

    <!--新闻作者-->
    <resultMap id="sysUserResult" type="com.linq.common.core.domain.entity.SysUser">
        <id column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="dept_id" jdbcType="BIGINT" property="deptId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="true_name" jdbcType="VARCHAR" property="trueName"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="user_type" jdbcType="VARCHAR" property="userType"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="sex" jdbcType="CHAR" property="sex"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
        <result column="login_ip" jdbcType="VARCHAR" property="loginIp"/>
        <result column="login_date" jdbcType="TIMESTAMP" property="loginDate"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <association property="dept" javaType="com.linq.common.core.domain.entity.SysDept" column="dept_id"
                     resultMap="sysDeptResult"/>
    </resultMap>

    <!--部门-->
    <resultMap id="sysDeptResult" type="com.linq.common.core.domain.entity.SysDept">
        <id column="dept_id" jdbcType="BIGINT" property="deptId"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="ancestors" jdbcType="VARCHAR" property="ancestors"/>
        <result column="dept_name" jdbcType="VARCHAR" property="deptName"/>
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="leader" jdbcType="VARCHAR" property="leader"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>


    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        news_id,user_id,news_type_id, news_title, news_content, news_attr, news_image, order_num,
        is_public, is_recommend, is_draft, thumbs, visits, comments, collects, news_source,news_source_author,news_source_tags,`status`, del_flag, create_by, create_time,
        update_by, update_time, remark
    </sql>
    <sql id="findNewsVo">
        select n.news_id,
               n.user_id,
               n.news_type_id,
               n.news_title,
               n.news_content,
               n.news_attr,
               n.news_image,
               n.order_num,
               n.is_public,
               n.is_recommend,
               n.is_draft,
               n.thumbs,
               n.visits,
               n.comments,
               n.collects,
               n.news_source,
               n.news_source_author,
               n.news_source_tags,
               n.`status`,
               n.del_flag,
               n.create_by,
               n.create_time,
               n.update_by,
               n.update_time,
               n.remark,
               nt.news_type_name,
               nt.status,
               u.user_id,
               u.dept_id,
               u.username,
               u.true_name,
               u.nick_name,
               u.email,
               u.avatar,
               u.phone,
               u.password,
               u.sex,
               u.status,
               u.del_flag,
               u.login_ip,
               u.login_date,
               u.create_by,
               u.create_time,
               u.remark,
               d.dept_id,
               d.parent_id,
               d.ancestors,
               d.dept_name,
               d.order_num,
               d.leader,
               d.phone,
               d.email,
               d.status,
               d.del_flag,
               d.create_by,
               d.create_time
        from linq_news n
                     left join linq_news_type nt on n.news_type_id = nt.news_type_id
                     left join sys_user u on n.user_id = u.user_id
                     left join sys_dept d on u.dept_id = d.dept_id
    </sql>
    <!--
        /**
         * 查询新闻列表
         *
         * @param news 新闻
         *
         * @return 新闻集合
         */
        IPage<LinqNews> findPage(Page<LinqNews> linqNewsPage, @Param("news") LinqNews news);
    -->
    <select id="findPageAll" resultMap="BaseResultMap">
        <include refid="findNewsVo"/>
        where n.del_flag = '0'
        <if test="news.newsTypeId != null">
            and n.news_type_id = #{news.newsTypeId}
        </if>
        <if test="news.newsTitle != null  and news.newsTitle != ''">
            and n.news_title like '%${news.newsTitle}%'
        </if>
        <if test="news.authorName != null  and news.authorName != ''">
            and EXISTS (
            SELECT
            1
            FROM
            sys_user su
            WHERE
            ( su.nick_name LIKE '%${news.authorName}%' )
            AND n.user_id = su.user_id)
        </if>
        <if test="news.newsAttr != null  and news.newsAttr != ''">
            and n.news_attr = #{news.newsAttr}
        </if>
        <if test="news.isPublic != null  and news.isPublic != ''">
            and n.is_public = #{news.isPublic}
        </if>
        <if test="news.isRecommend != null  and news.isRecommend != ''">
            and n.is_recommend = #{news.isRecommend}
        </if>
        <if test="news.isDraft != null  and news.isDraft != ''">
            and n.is_draft = #{news.isDraft}
        </if>
        <if test="news.status != null  and news.status != ''">
            and n.status = #{news.status}
        </if>
        <if test="news.beginTime != null and news.beginTime != ''">
            <!-- 开始时间检索 -->
            AND date_format(n.create_time, '%y%m%d') &gt;= date_format(#{news.beginTime}, '%y%m%d')
        </if>
        <if test="news.endTime != null and news.endTime != ''">
            <!-- 结束时间检索 -->
            AND date_format( n.create_time,'%y%m%d')&lt;=date_format( #{news.endTime}, '%y%m%d')
        </if>
        order by n.order_num,n.news_id desc
    </select>
    <!--
        /**
         * 根据用户id查询新闻列表
         *
         * @param news 新闻
         *
         * @return 新闻集合
         */
        IPage<LinqNews> findPageByUserId(Page<LinqNews> linqNewsPage, @Param("news") LinqNews news);
    -->
    <select id="findPageByUserId" resultMap="BaseResultMap">
        <include refid="findNewsVo"/>
                where n.del_flag = '0'
                  and n.user_id = #{userId}
        <if test="news.newsTypeId != null">
            and n.news_type_id = #{news.newsTypeId}
        </if>
        <if test="news.newsTitle != null  and news.newsTitle != ''">
            and n.news_title like '%${news.newsTitle}%'
        </if>
        <if test="news.newsAttr != null  and news.newsAttr != ''">
            and n.news_attr = #{news.newsAttr}
        </if>
        <if test="news.isPublic != null  and news.isPublic != ''">
            and n.is_public = #{news.isPublic}
        </if>
        <if test="news.isRecommend != null  and news.isRecommend != ''">
            and n.is_recommend = #{news.isRecommend}
        </if>
        <if test="news.isDraft != null  and news.isDraft != ''">
            and n.is_draft = #{news.isDraft}
        </if>
        <if test="news.status != null  and news.status != ''">
            and n.status = #{news.status}
        </if>
        <if test="news.beginTime != null and news.beginTime != ''">
            <!-- 开始时间检索 -->
            AND date_format(n.create_time, '%y%m%d') &gt;= date_format(#{news.beginTime}, '%y%m%d')
        </if>
        <if test="news.endTime != null and news.endTime != ''">
            <!-- 结束时间检索 -->
            AND date_format( n.create_time,'%y%m%d')&lt;=date_format( #{news.endTime}, '%y%m%d')
        </if>
        order by n.order_num,n.news_id desc
    </select>
</mapper>